<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>goDown = false;
alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(vk_right) || (gamepad_axis_value(1,gp_axislh) &gt; 0)
|| (keyboard_check(vk_left) || (gamepad_axis_value(1,gp_axislh) &lt; 0))
|| keyboard_check_pressed(vk_up) || (gamepad_button_check_pressed(1,gp_face1))
|| keyboard_check(vk_down) || (gamepad_axis_value(1,gp_axislv) &gt; 0)
|| keyboard_check_pressed(vk_rshift) || (gamepad_button_check_pressed(1,gp_shoulderrb))
|| keyboard_check_released(vk_down) || (gamepad_axis_value(1,gp_axislv) == 0)
|| keyboard_check(ord('D')) || (gamepad_axis_value(0,gp_axislh) &gt; 0)
|| (keyboard_check(ord('A')) || (gamepad_axis_value(0,gp_axislh) &lt; 0))
|| keyboard_check_pressed(ord('W')) || (gamepad_button_check_pressed(0,gp_face1))
|| keyboard_check(ord('S')) || (gamepad_axis_value(0,gp_axislv) &gt; 0)
|| keyboard_check_pressed(vk_lshift) || (gamepad_button_check_pressed(0,gp_shoulderrb))
|| keyboard_check_released(ord('S')) || (gamepad_axis_value(0,gp_axislv) == 0)){
    room_goto(room1);

}

if(alpha == 1)
{
    goDown = true;
}else if(angle == 0){
    goDown = false;
}

if(goDown){
    alpha-= 0.1;
}else{
    alpha+= 0.1;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_color(room_width/2, room_height - 50, "Press Any Key. . . ", c_white,c_white,c_white,c_white, alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

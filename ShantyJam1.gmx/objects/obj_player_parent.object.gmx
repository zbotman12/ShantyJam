<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Poopy
grav = 1;
hsp = 0;
vsp = 0;
jumpspeed = 12;
movespeed = 10;
tv = 10;
image_speed = 5;
key_right = 0;
key_left = 0;
key_jump = 0;
key_down = 0;
key_shift = 0;
key_down_release = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///React to inputs

if(key_shift)
{
    if(grid_place_meeting(x,y+1)){
        ds_list_find_index(global.rustyTileList, global.grid[# x/CELL_WIDTH,(y+1)/CELL_HEIGHT]);
    }
    if(grid_place_meeting(x,y+1)){
    
    }
    if(grid_place_meeting(x,y+1)){
    
    }
    if(grid_place_meeting(x,y+1)){
    
    }
    if(grid_place_meeting(x+1,y+1)){
    
    }
    if(grid_place_meeting(x-1,y+1)){
    
    }
    if(grid_place_meeting(x+1,y-1)){
    
    }
    if(grid_place_meeting(x-1,y-1)){
    
    }
}

move = key_left + key_right;
hsp = move * movespeed;

if (vsp &lt; tv) vsp += grav;
if  (key_down_release)
{
tv = 10
grav = 1
    if(vsp &gt; 10){
        vsp = 10;
    }
}
if (vsp = 10 &amp;&amp; key_down)
{grav = 1.5
tv = 15}

if (grid_place_meeting(x,y+1)/*place_meeting(x,y+1,obj_wall)*/)
{ vsp = 0 }
if (key_jump)
vsp = -jumpspeed

if (grid_place_meeting(x,y+vsp)/*place_meeting(x,y+vsp,obj_wall)*/)
{
    while (!grid_place_meeting(x,y+sign(vsp))/*!place_meeting(x,y+sign(vsp),obj_wall)*/)
    {
    y =y+sign(vsp)
    }
vsp = 0
}
if (grid_place_meeting(x+hsp,y)/*place_meeting(x+hsp,y,obj_wall)*/)
{
    while (!grid_place_meeting(x+sign(hsp),y)/*!place_meeting(x+sign(hsp),y,obj_wall)*/)
    {
    x=x+sign(hsp)
    }
hsp = 0
}
x +=hsp;
y +=vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

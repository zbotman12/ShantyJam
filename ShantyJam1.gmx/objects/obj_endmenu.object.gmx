<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "PLAY AGAIN";
menu[1] = "CREDITS";
menu[2] = "QUIT";

space = 65;
mpos = 0;

delayGuy = 60;

angle = 0;
goDown = false;
goToLevel = false;

right = false;
left = false;
up = false;
down = false;
upPressed = false;
downPressed = false;
rightAndLeftPressed = false;
grounded = false;
hidden = false;
runButton = false;
leftClick = false;
leftClickReleased = false;
lastDir = 0;
jump = false;
interactPressed = false;
arrowUp = false;
arrowDown = false;
arrowLeft = false;
arrowRight = false;
arrowUpRelease = 0;
arrowDownRelease = 0;
arrowLeftRelease = 0;
arrowRightRelease = 0;

lastDirTSRHor = 0;
lastDirTSLHor = 0;
lastDirTSRVert = 0;
lastDirTSLVert = 0;


delayTimer = 0;
delayTime = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>get_input();

if(delayGuy &gt; 0 || audio_is_playing(kabukiYoo)){
delayGuy--;
right = false;
left = false;
up = false;
down = false;
upPressed = false;
downPressed = false;
rightAndLeftPressed = false;
grounded = false;
hidden = false;
runButton = false;
leftClick = false;
leftClickReleased = false;
lastDir = 0;
jump = false;
interactPressed = false;
arrowUp = false;
arrowDown = false;
arrowLeft = false;
arrowRight = false;
arrowUpRelease = 0;
arrowDownRelease = 0;
arrowLeftRelease = 0;
arrowRightRelease = 0;

lastDirTSRHor = 0;
lastDirTSLHor = 0;
lastDirTSRVert = 0;
lastDirTSLVert = 0;

}


var move = 0;
var up = 0;
var down = 0;




if(delayTimer == 0){
    if(arrowUp){
        up = 1;
    }else if(arrowDown){
        down = 1;
    }else{
        delayTimer = delayTime;
    }
}

move -= max(keyboard_check_pressed(vk_up),keyboard_check_pressed(ord("W")), up, 0);
move += max(keyboard_check_pressed(vk_down),keyboard_check_pressed(ord("S")), down, 0);

if (move != 0)
{
    mpos += move;
    if (mpos &lt; 0) mpos = array_length_1d(menu) - 1;
    if (mpos &gt; array_length_1d(menu) -1) mpos = 0;
}

var push;
push = max(keyboard_check_released(vk_enter),keyboard_check_released(vk_shift),keyboard_check_released(vk_space), leftClick, 0); 
if (push == 1){
    if(mpos == 0){
        audio_play_sound(kabukiYoo, 0, 0);
    }
    scr_menu();
}
delayTimer++;
if(delayTimer &gt;= delayTime || arrowUpRelease || arrowDownRelease){
    delayTimer = 0;
}

if(goToLevel &amp;&amp; !audio_is_playing(kabukiYoo)){
    room_goto(room0);
}

if(angle == 20)
{
    goDown = true;
}else if(angle == -20){
    goDown = false;
}

if(goDown){
    angle--;
}else{
    angle++;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(score_font);
draw_set_color(c_red);

if(room == rusty){
    draw_text_transformed(room_width - room_width/4 - 200, 250,"RUSTY", 3, 3, angle)
    draw_text_transformed(room_width - room_width/4+ 300, 250,"WINS!!", 3, 3, -angle)
}else if (room == crusty){
    draw_text_transformed(room_width - room_width/4 - 250, 250,"CRUSTY", 3, 3, angle)
    draw_text_transformed(room_width - room_width/4 + 300, 250,"WINS!!", 3, 3, -angle)
}
draw_set_halign(fa_left);

var m;
for (m =0; m &lt; array_length_1d(menu); m += 1)
{
    if(mpos == m){
        draw_set_color(c_white);
        draw_text_transformed(x + space, y +(m * space),string(menu[m]), 1.5, 1.5, 15)
    }else{
        draw_set_color(c_red);
        draw_text(x + space, y +(m * space),string(menu[m]))
    }
}

draw_sprite_ext(sprite_index, 0, x + 16, y + mpos * space, 1, 1, 0, c_white, 1 - delayGuy/60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
